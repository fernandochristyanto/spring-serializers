version: "3"
services:
  zookeeper:
    image: ${WURSTMEISTER_REPOSITORY}/zookeeper:${ZOOKEEPER_TAG}
    container_name: zookeeper
    ports:
      - 2181:2181
  kafka:
    image: ${WURSTMEISTER_REPOSITORY}/kafka:${KAFKA_TAG}
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=${LOCAL_STATIC_IP} # host docker ip
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  ####################################
  # Schema Registry
  ####################################
  schemaregistry:
    image: ${CONFLUENT_REPOSITORY}/cp-schema-registry:${CONFLUENT_TAG}
    container_name: schemaregistry
    restart: always
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8085:8085
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
  control-center:
    image: ${CONFLUENT_REPOSITORY}/cp-enterprise-control-center:${CONFLUENT_TAG}
    hostname: control-center
    container_name: control-center
    restart: always
    depends_on:
      - zookeeper
      - kafka
      - schemaregistry
    ports:
      - 9021:9021
      - 9022:9022
    environment:
      # general settings
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1
      # Amount of heap to use for internal caches. Increase for better throughput
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 100000000
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      # HTTP and HTTPS to Control Center UI
      CONTROL_CENTER_REST_LISTENERS: http://0.0.0.0:9021,https://0.0.0.0:9022
      PORT: 9021
      # Connect
      CONTROL_CENTER_CONNECT_CONNECT1_CLUSTER: http://connect:8083
      # ksqlDB
      CONTROL_CENTER_KSQL_WIKIPEDIA_URL: http://ksqldb-server:8088
      # Access ksqlDB server from a browser on your localhost
      CONTROL_CENTER_KSQL_WIKIPEDIA_ADVERTISED_URL: http://localhost:8088
      # Schema Registry
      CONTROL_CENTER_SCHEMA_REGISTRY_SR1_URL: https://schemaregistry:8085
      # Schema Registry
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: schemaregistry:8085
  ####################################
  # App
  ####################################
  todo_app:
    container_name: todo_app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - schemaregistry
    environment:
      - spring.kafka.bootstrap-servers=http://kafka:9092
      - spring.kafka.properties.schema-registry-url=http://schemaregistry:8085